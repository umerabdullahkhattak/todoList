(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),i=t(645),d=t.n(i)()(o());d.push([n.id,"*{\n    padding: 0px;\n    margin: 0px;\n}\n.header{\n    height:  10vh;\n    width: 100%;\n    background-color: cadetblue;\n    color: black;\n    font-size: 7vh;\n    text-align: center;\n    \n}\n.content{\n    height: 90vh;\n    width: 100%;\n    background-color: aqua;\n    display: flex;\n    flex-direction: row;\n\n}\n.leftpanel{\n    height: 90vh;\n    width: 18%;\n    background-color: rgb(121, 198, 202);\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    \n}\n\n.rightpanel{\n    height: 90vh;\n    width: 82%;\n    background-color: whitesmoke;\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    \n}\n.description{\n    background-color: white;\n    height: 5vh;\n    width: 50%;\n    border-color: blue;\n    \n    justify-content: center;\n    font-size: 3vh;\n    border-radius: 5px;\n    padding-left: 10px;\n    padding-top: 5px;\n    \n}\n.inputboxright{\n    background-color: white;\n    height: 5vh;\n    width: 50%;\n    font-size: 3vh;\n    border-radius: 10px;\n    border-color: blue;\n    \n    justify-content: center;\n    padding-left: 10px;\n}\n.edit{\n    background-color: aliceblue;\n    height: 5vh;\n    width: 10%;\n    border-radius: 10px;\n}\n.delete{\n    background-color:red;\n    height: 5vh;\n    width: 10%;\n    border-radius: 10px;\n}\n.projectHeading{\n    font-size: 5vh;\n}\n.input{\n    \n    cursor:default;\n}\n.addoption{\n    cursor: default;\n    \n    \n}\n.inputbox{\n    border: none;\n    background-color: rgb(255, 243, 228);\n    border-radius: 5px;\n    height: 4vh;\n    width: 100%;\n    font-size: 2vh;\n    border-radius: 5px;\n    \n    \n}\n.inputtodo{\n    border: none;\n    background-color: rgb(255, 243, 228);\n    border-radius: 5px;\n    height: 6vh;\n    width: 60%;\n    \n}\n.inputbox:focus{\n    border : none;\n}\n.project{\n    background-color: aliceblue;\n    color: black;\n    height: 4vh;\n    font-size: 3vh;\n    border-radius: 5px;\n    border-top: none;\n    border-bottom: 1px inset black;\n    border-left: none;\n    border-right: none;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,aAAa;IACb,WAAW;IACX,2BAA2B;IAC3B,YAAY;IACZ,cAAc;IACd,kBAAkB;;AAEtB;AACA;IACI,YAAY;IACZ,WAAW;IACX,sBAAsB;IACtB,aAAa;IACb,mBAAmB;;AAEvB;AACA;IACI,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,kBAAkB;IAClB,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,4BAA4B;IAC5B,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;;AAEnB;AACA;IACI,uBAAuB;IACvB,WAAW;IACX,UAAU;IACV,kBAAkB;;IAElB,uBAAuB;IACvB,cAAc;IACd,kBAAkB;IAClB,kBAAkB;IAClB,gBAAgB;;AAEpB;AACA;IACI,uBAAuB;IACvB,WAAW;IACX,UAAU;IACV,cAAc;IACd,mBAAmB;IACnB,kBAAkB;;IAElB,uBAAuB;IACvB,kBAAkB;AACtB;AACA;IACI,2BAA2B;IAC3B,WAAW;IACX,UAAU;IACV,mBAAmB;AACvB;AACA;IACI,oBAAoB;IACpB,WAAW;IACX,UAAU;IACV,mBAAmB;AACvB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,cAAc;AAClB;AACA;IACI,eAAe;;;AAGnB;AACA;IACI,YAAY;IACZ,oCAAoC;IACpC,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,cAAc;IACd,kBAAkB;;;AAGtB;AACA;IACI,YAAY;IACZ,oCAAoC;IACpC,kBAAkB;IAClB,WAAW;IACX,UAAU;;AAEd;AACA;IACI,aAAa;AACjB;AACA;IACI,2BAA2B;IAC3B,YAAY;IACZ,WAAW;IACX,cAAc;IACd,kBAAkB;IAClB,gBAAgB;IAChB,8BAA8B;IAC9B,iBAAiB;IACjB,kBAAkB;AACtB",sourcesContent:["*{\n    padding: 0px;\n    margin: 0px;\n}\n.header{\n    height:  10vh;\n    width: 100%;\n    background-color: cadetblue;\n    color: black;\n    font-size: 7vh;\n    text-align: center;\n    \n}\n.content{\n    height: 90vh;\n    width: 100%;\n    background-color: aqua;\n    display: flex;\n    flex-direction: row;\n\n}\n.leftpanel{\n    height: 90vh;\n    width: 18%;\n    background-color: rgb(121, 198, 202);\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    \n}\n\n.rightpanel{\n    height: 90vh;\n    width: 82%;\n    background-color: whitesmoke;\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    \n}\n.description{\n    background-color: white;\n    height: 5vh;\n    width: 50%;\n    border-color: blue;\n    \n    justify-content: center;\n    font-size: 3vh;\n    border-radius: 5px;\n    padding-left: 10px;\n    padding-top: 5px;\n    \n}\n.inputboxright{\n    background-color: white;\n    height: 5vh;\n    width: 50%;\n    font-size: 3vh;\n    border-radius: 10px;\n    border-color: blue;\n    \n    justify-content: center;\n    padding-left: 10px;\n}\n.edit{\n    background-color: aliceblue;\n    height: 5vh;\n    width: 10%;\n    border-radius: 10px;\n}\n.delete{\n    background-color:red;\n    height: 5vh;\n    width: 10%;\n    border-radius: 10px;\n}\n.projectHeading{\n    font-size: 5vh;\n}\n.input{\n    \n    cursor:default;\n}\n.addoption{\n    cursor: default;\n    \n    \n}\n.inputbox{\n    border: none;\n    background-color: rgb(255, 243, 228);\n    border-radius: 5px;\n    height: 4vh;\n    width: 100%;\n    font-size: 2vh;\n    border-radius: 5px;\n    \n    \n}\n.inputtodo{\n    border: none;\n    background-color: rgb(255, 243, 228);\n    border-radius: 5px;\n    height: 6vh;\n    width: 60%;\n    \n}\n.inputbox:focus{\n    border : none;\n}\n.project{\n    background-color: aliceblue;\n    color: black;\n    height: 4vh;\n    font-size: 3vh;\n    border-radius: 5px;\n    border-top: none;\n    border-bottom: 1px inset black;\n    border-left: none;\n    border-right: none;\n}"],sourceRoot:""}]);const a=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&d[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),d=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(d).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},d=[],a=0;a<n.length;a++){var c=n[a],A=r.base?c[0]+r.base:c[0],l=i[A]||0,s="".concat(A," ").concat(l);i[A]=l+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:s,updater:h,references:1})}d.push(s)}return d}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var d=0;d<i.length;d++){var a=t(i[d]);e[a].references--}for(var c=r(n,o),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),d=t.n(i),a=t(565),c=t.n(a),A=t(216),l=t.n(A),s=t(589),p=t.n(s),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=d().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;let C=document.getElementsByTagName("body")[0],f=document.createElement("div");f.classList.add("header"),f.innerText="TODO List",C.appendChild(f);let v=document.createElement("div");v.classList.add("content");let b=[],B=document.createElement("div");B.classList.add("leftpanel");let m=document.createElement("h1");m.classList.add(".projectHeading"),m.innerHTML="Projects",B.appendChild(m);let g=document.createElement("h2");g.classList.add("addoption"),g.innerHTML="+",B.appendChild(g),g.addEventListener("click",(n=>{let e=document.createElement("input");e.classList.add("inputbox"),e.setAttribute("type","text"),B.appendChild(e),e.addEventListener("keypress",(n=>{if("Enter"===n.key){let n=e.value;if(""!=n){let e=document.createElement("div");e.classList.add("project"),e.innerHTML=n,B.appendChild(e);let t={title:n,description:""};b.push(t)}B.removeChild(e)}}))}));let I=document.createElement("div");I.classList.add("rightpanel");let x=document.querySelectorAll(".project");B.onclick=function(){let n=document.createElement("p");n.classList.add("description");let e=document.createElement("button");e.classList.add("edit"),e.innerHTML="Edit";let t=document.createElement("button");t.classList.add("delete"),t.innerHTML="x",x=document.querySelectorAll(".project");for(let r=0;r<x.length;r++)x[r].onclick=function(){if(""===b[r].description){I.innerHTML="";let o=document.createElement("input");o.classList.add("inputboxright"),o.setAttribute("type","text"),I.appendChild(o),o.addEventListener("keypress",(i=>{if("Enter"===i.key){let i=o.value;b[r].description=i,n.innerHTML=b[r].description,I.appendChild(n),I.appendChild(e),I.appendChild(t),I.removeChild(o),e.onclick=function(){I.removeChild(n),I.removeChild(e),I.removeChild(t),o.innerHTML=n.innerHTML,I.appendChild(o),I.appendChild(e),I.appendChild(t)},t.onclick=function(){b[r].description="",I.removeChild(n),I.removeChild(e),I.removeChild(t)}}}))}if(""!=b[r].description){I.innerHTML="";let o=document.createElement("input");o.classList.add("inputboxright"),o.setAttribute("type","text"),n.innerHTML=b[r].description,I.appendChild(n),I.appendChild(e),I.appendChild(t),e.addEventListener("click",(i=>{I.removeChild(n),I.removeChild(e),I.removeChild(t),o.innerHTML=b[r].description,I.appendChild(o),I.appendChild(e),I.appendChild(t),o.addEventListener("keypress",(i=>{if("Enter"===i.key){let i=o.value;b[r].description=i,n.innerHTML=b[r].description,I.appendChild(n),I.appendChild(e),I.appendChild(t),I.removeChild(o),e.onclick=function(){I.removeChild(n),I.removeChild(e),I.removeChild(t),o.innerHTML=n.innerHTML,I.appendChild(o),I.appendChild(e),I.appendChild(t)}}}))})),t.onclick=function(){b[r].description="",I.removeChild(n),I.removeChild(e),I.removeChild(t)}}}},v.appendChild(B),v.appendChild(I),C.appendChild(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,